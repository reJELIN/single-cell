BootStrap: docker
From: ubuntu:20.04

#build image
#sudo apptainer build single_cell_lr_test.simg single_cell_lr_test.def 1> err.txt 2> out.txt
#using image
#sudo singularity shell -B local_folder:/WORKDIR/container_folder single_cell.simg

%environment
    export PATH=/opt/tools/bin:$PATH
    export RETICULATE_MINICONDA_ENABLED=FALSE
    LANG=en_US.UTF-8
    LC_ALL=en_US.UTF-8
    LC_TIME=en_US.UTF-8
    LC_MONETARY=en_US.UTF-8
    LC_PAPER=en_US.UTF-8
    LC_MEASUREMENT=en_US.UTF-8
    ENV TZ=Europe
    DEBIAN_FRONTEND=noninteractive

%post
    echo "Ubuntu version ######################"
    cat /etc/lsb-release
    apt-get -y update && apt-get -y upgrade
    apt-get install -y tzdata
    apt-get install apt-utils
    apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libgsl-dev libgit2-dev libpython3-dev libgmp3-dev libglpk-dev libgmp-dev libxml2-dev libpangocairo-1.0-0
    apt-get install -y libcairo2-dev libxt-dev libfontconfig1-dev libharfbuzz-dev libfribidi-dev libtiff5-dev libblas-dev liblapack-dev gfortran cmake libfreetype6-dev libpng-dev libjpeg-dev libhdf5-dev wget
    apt-get install -y libharfbuzz0b libpoppler-cpp-dev libmagick++-dev poppler-utils libudunits2-dev
    apt-get install -y r-cran-devtools
    apt-get install -y r-cran-nloptr
    apt-get install -y libfreetype-dev libfontconfig-dev
    apt-get install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common
    apt-get -y update && apt-get -y upgrade
    apt-get install -y --no-install-recommends software-properties-common dirmngr
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/'
    apt-get -y update && apt-get -y upgrade
    #apt-get install -y r-base-dev r-base-core 
    #apt-get install -y r-base-core=4.1.0-1.2004.0 r-base-dev=4.1.0-1.2004.0 #apt-cache policy r-base r-base-dev pour conna√Ætre les versions
    apt-get install -y r-base-core r-base-dev
    #wget https://cran.r-project.org/src/contrib/Archive/Matrix/Matrix_1.6-4.tar.gz
    #wget https://cran.r-project.org/src/contrib/Archive/MASS/MASS_7.3-54.tar.gz
    #wget https://cran.r-project.org/src/contrib/SeuratObject_5.0.2.tar.gz
    wget https://github.com/smorabit/hdWGCNA/archive/refs/tags/v0.3.00.tar.gz
    echo "R version ######################"
    ##pbkrtest is not available
    R -e 'install.packages("lattice")'
    R -e 'install.packages("devtools")'
    R -e 'install.packages("BiocManager")'
    R -e 'install.packages("Cairo")'
    R -e 'install.packages(c("nloptr","lme4"))'
    R -e 'install.packages("ggplot2",dependencies=TRUE)'
    R -e 'devtools::install_version("dbplyr", version = "2.3.4")'
    R -e 'install.packages(c("stringr","gridGraphics","waffle","ggpubr","optparse"),dependencies=TRUE)'
    R -e 'install.packages("rsvd", dependencies = TRUE)' # for seurat
    R -e 'remove.packages(grep("spatstat", installed.packages(), value = T))' # for seurat
    R -e 'devtools::install_github("spatstat/spatstat@v1.64-2")' # for seurat
    R -e 'install.packages("SeuratObject_5.0.2.tar.gz", repos = NULL, type="source")'
    R -e 'devtools::install_github("thomasp85/patchwork")'
    R -e 'BiocManager::install(c("scran", "scater", "uwot", "dittoSeq", "DEXSeq", "Nebulosa", "ggbio", "BiocStyle"))'
    #R -e 'devtools::install_github("timbitz/Isosceles", dependencies = TRUE,upgrade = TRUE)'
    R -e 'BiocManager::install("IsoformSwitchAnalyzeR")'
    R -e 'devtools::install_github("dzhang32/ggtranscript")'
    R -e 'devtools::install_github("immunogenomics/presto")'
    R -e 'install.packages("harmony",repos="http://cran.us.r-project.org")'
    R -e 'BiocManager::install("WGCNA")'
    R -e 'devtools::install_github("wjawaid/enrichR")'
    R -e 'BiocManager::install("GeneOverlap")'
    R -e 'BiocManager::install("UCell")'
    R -e 'BiocManager::install("GenomicRanges")'
    R -e 'devtools::install_github("smorabit/hdWGCNA")'
 
